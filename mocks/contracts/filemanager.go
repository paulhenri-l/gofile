// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/github.com/paulhenri-l/gofile/contracts (interfaces: FileManager)

// Package contracts is a generated GoMock package.
package contracts

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFileManager is a mock of FileManager interface
type MockFileManager struct {
	ctrl     *gomock.Controller
	recorder *MockFileManagerMockRecorder
}

// MockFileManagerMockRecorder is the mock recorder for MockFileManager
type MockFileManagerMockRecorder struct {
	mock *MockFileManager
}

// NewMockFileManager creates a new mock instance
func NewMockFileManager(ctrl *gomock.Controller) *MockFileManager {
	mock := &MockFileManager{ctrl: ctrl}
	mock.recorder = &MockFileManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileManager) EXPECT() *MockFileManagerMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *MockFileManager) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockFileManagerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockFileManager)(nil).Close))
}

// Write mocks base method
func (m *MockFileManager) Write(arg0 []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write
func (mr *MockFileManagerMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockFileManager)(nil).Write), arg0)
}

// WrittenBytes mocks base method
func (m *MockFileManager) WrittenBytes() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WrittenBytes")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// WrittenBytes indicates an expected call of WrittenBytes
func (mr *MockFileManagerMockRecorder) WrittenBytes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WrittenBytes", reflect.TypeOf((*MockFileManager)(nil).WrittenBytes))
}
